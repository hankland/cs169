<!DOCTYPE html>
<html>
<head>
  <title>A NEW MMO</title>
  <script src="/socket.io/socket.io.js"></script>
  <script type='text/javascript' src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
  <script type='text/javascript' src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>
  <script type='text/javascript' src="javascripts/post.js"></script>
  <script>
    var socket = io.connect('/');

    socket.on('disconnect', function() {
      // alert("The battle ended because you disconnected.");
    });

    monster = {name: ""};
    
    socket.on('getbattlers', function(data) {
      character = data.character;
      monster = data.monster;
      // character.current_monster_health = monster.health_points;
      // character.current_monster_magic = monster.magic_points;
    });

    socket.on('getmap', function(data) {
        areamap = data.areamap;
        should_render = true;
    });

    socket.emit('getbattlers', {});
    socket.emit('getmap', {});
  </script>
</head>

<body>
<center>
    <!-- Battle timer information -->
    <div id="timer" style="width:75px;padding:5px 0px 5px 0px;border:1px solid black;background-color:tan;" class="box">
      Turn 0
    </div>
    <canvas id="myCanvas" width="500" height="225" style="overflow:hidden;border:1px solid #c3c3c3;">
    Your browser does not support the HTML5 canvas tag.
    </canvas>
    <!-- Textbox displaying messages -->
    <div id="textbox" style="width:500px;padding:5px 0px 5px 0px;border:1px solid black;background-color:tan;" class="box">...</div>
    <!-- Battle command menu -->
    <div id="commands" style="width:500px;height:300px;" class="box">
    <div id="players" style="width:40%;height:100%;border:1px solid black;float:left;">
       <div id="allyname" style="height:25%;float:center;">
       </div>
       <div id="allylevel" style="height:25%;float:center;">
       </div>
       <div id="allyhp" style="height:25%;float:center;">
       </div>
       <div id="allymp" style="height:25%;float:center;">
       </div>
    </div>
    <div id="battleCommands" style="width:18.8%;height:100%;border:1px solid black;float:left;">
        <div id="attack" style="height:33%;float:center">
        <input id="button-attack" type="button" value="Attack" onclick="attack(character, monster);">
        </div>
        <!--
        <div id="skills" style="height:20%">
        Skills
        </div>
        <div id="items" style="height:20%">
        Items
        </div>
        -->
        <div id="defend" style="height:33%;float:center">
        <input id="button-defend" type="button" value="Defend" onclick="defend(character);">
        </div>
        <div id="flee" style="height:33%;float:center">
        <input id="button-flee" type="button" value="Flee">
        </div>
    </div>
    <div id="enemies" style="width:40%;height:100%;border:1px solid black;float:left;">
        <div id="enemyname" style="height:50%;float:center;">
         </div>
         <div id="enemyhp" style="height:50%;float:center;">
         </div>
    </div>
    </div>
    <div id="actions" style="padding:5px 0px 5px 0px;border:1px solid black;background-color:tan;" class="box">
      <input id="button-next-continue" type="button" value="Next" onclick="next('continue');">
      <input id="button-next-end" type="button" value="Next" onclick="next('end');">
      <input id="button-overworld" type="button" value="Return to Overworld" onclick="switchToOverworld();">
      <!--<input id="button-logout" type="button" value="Logout" onclick="window.location.href ='/logout';">-->
    </div>
</center>

<script>
  /* Initially hide all buttons. */
  $('#actions').hide();
  $('#commands').hide();

  /* Upon page load. */
  $(document).ready(function() {
    beginBattle();
  });

  /* Variables */
  var turn = 0; // The current turn number.
  var ALLY_TURN = 0; // Ally's turn.
  var ENEMY_TURN = 1; // Enemy's turn.
  var actor = ALLY_TURN; // The entity making the next move.
  var totalEXPGained = 0; // The total EXP gained so far this battle.

  var ally = <%= character.id %>;
  var enemy = <%= monster.id %>;

  var should_render;

  var c = document.getElementById("myCanvas");
  var ctx = c.getContext("2d");

  var AREA_WIDTH = 20; // x-dimension size
  var AREA_HEIGHT = 9; // y-dimension size
  var TILE_SIZE = 25; // side of a single area tile

  var areamap = "";

  var render = function() {
        if (should_render) {
          ctx.clearRect(0, 0, TILE_SIZE * AREA_WIDTH, TILE_SIZE * AREA_HEIGHT);

          var img1 = new Image();
          var img2 = new Image();

          //Terrain Choice
          if (areamap[0] == 'F') { 
            img1.src = "/images/ForestFloor.png";
          } else if (areamap[0] == 'M') {
            img1.src = "/images/MountainFloor.png";
          }
          img2.src = "/images/chars.png";
          var floor = ctx.createPattern(img1,"repeat");
                
          // Draw the area's terrain
          for(var i = 0; i < 180; i++) {
              var x = i % AREA_WIDTH;
              var y = (i - x) / AREA_WIDTH;

              ctx.fillStyle = floor;
              ctx.fillRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE);
          }

          // Draw currently logged-in character
          ctx.drawImage(img2, 75, 0, 25, 25, 4 * TILE_SIZE, 4 * TILE_SIZE, TILE_SIZE, TILE_SIZE);

          // Draw monster
          ctx.fillStyle = "#000000";
          ctx.fillRect(15 * TILE_SIZE, 4 * TILE_SIZE, TILE_SIZE, TILE_SIZE);
          

          // Draw the area's grid
          for (var x = 0; x <= AREA_WIDTH * TILE_SIZE; x += TILE_SIZE) {
              ctx.moveTo(x, 0);
              ctx.lineTo(x, AREA_HEIGHT * TILE_SIZE);
          }
          for (var y = 0; y <= AREA_HEIGHT * TILE_SIZE; y += TILE_SIZE) {
              ctx.moveTo(0, y);
              ctx.lineTo(AREA_WIDTH * TILE_SIZE, y);
          }
          ctx.strokeStyle = "black";
          ctx.stroke();

          should_render = false;
        }
      };

  setInterval(render, 1);

  function showNextMenu(type) {
    $('#commands').hide();
    $('#actions').show();
    $('#button-overworld').hide();
    if (type == 'continue') {
      $('#button-next-end').hide();
      $('#button-next-continue').show();
    } else if (type == 'end') {
      $('#button-next-continue').hide();
      $('#button-next-end').show();
    } else {
      $('#button-next-continue').hide();
      $('#button-next-end').hide();
    }
  }

  function showCommandMenu() {
    $('#actions').hide();
    $('#commands').show();
  }

  function showEndMenu() {
    $('#commands').hide();
    $('#actions').show();
    $('#button-next-continue').hide();
    $('#button-next-end').hide();
    $('#button-overworld').show();
  }
  
  /* Enter battle. */
  function beginBattle() {
    renderBattleInfo();
    display("Battle has begun!");
  }
  
  /* Update battle info. */
  function renderBattleInfo() {
    incrementTurn();
    updateBattleInfo();
    showCommandMenu();
  }

  function save() {
    socket.emit('save', {c: character});
  }

  /* Update player/monster info. */
  function updateBattleInfo() {
    $('#allyname').html("<b><%= character.name %></b>");
    $('#allylevel').html("Level: <%= character.level %>, EXP: <%= character.experience %> / 100");
    $('#allyhp').html("HP: <%= character.current_health_points %> / <%= character.health_points %>");
    $('#allymp').html("MP: <%= character.current_magic_points %> / <%= character.magic_points %>");
    $('#enemyname').html("<b><%= monster.name %></b>");
    $('#enemyhp').html("HP: <%= character.current_monster_health %> / <%= monster.health_points %>");
    $('#enemymp').html("MP: <%= character.current_monster_magic %> / <%= monster.magic_points %>");
  }
  
  /* Increment the turn counter by numTurns. */
  function incrementTurn() {
    turn += 1;
    $('#timer').html("Turn " + turn);
  }

  /* Next entity gets to make a move. */
  function nextActor() {
    if (actor == ALLY_TURN) {
      actor = ENEMY_TURN;
      if (defending) {
        display("The enemy attacks... but you were defending so it doesn't do any damage.");
        showNextMenu('continue');
      } else {
        var damage = monster.physical_attack - character.physical_defense;
        if (damage < 0) {
          damage = 0;
        } else if (damage > character.current_health_points) {
          damage = character.current_health_points;
          character.current_health_points = 0;
          display("You were slain by the enemy... You will be revived at the original location.");
          var h = character.current_health_points;
          var s = h.toString();
          $('#allyhp').html("HP: " + s.concat("/ <%= character.health_points %>"));
          showNextMenu('end');
        } else {
          character.current_health_points -= damage;
          display("It's now the enemy's turn. The enemy attacks you for " + damage + " damage...");
          var h = character.current_health_points;
          var s = h.toString();
          $('#allyhp').html("HP: " + s.concat("/ <%= character.health_points %>"));
          showNextMenu('continue');
        }
      }
    } else if (actor == ENEMY_TURN) {
      incrementTurn();
      actor = ALLY_TURN;
      display("It is your turn. Choose a battle command.");
      showCommandMenu();
    }
  }

  /* Use the ATTACK battle command.
   * The attacker and attackee must be characters or enemies. */
  function attack(attacker, attackee) {
    defending = false;
    var damage = character.physical_attack - monster.physical_defense;
    if (damage < 0) {
      damage = 0;
    }
    character.current_monster_health -= damage;
    display("You hit the monster for " + damage + " damage!");
    if (character.current_monster_health > 0) {
      var h = character.current_monster_health;
      var s = h.toString();
      $('#enemyhp').html("HP: " + s.concat("/ <%= monster.health_points %>")); 
      showNextMenu('continue');
    } else {
      character.current_monster_health = 0;
      kill();
    }
  }

  /* Use the DEFEND battle command.
   * The defender must be a character or enemy. */
  function defend(defender) {
    display("You go into defensive stance!");
    defending = true;
    showNextMenu('continue');
  }

  /* Use the FLEE battle command.
   * The fleer must be a character or enemy. */
  function flee(fleer) {
    defending = false;
    var battleDice = Math.floor((Math.random() * character.speed) + 1);
    if (battleDice > 0) {
      display("You've fled the battle!");
      showNextMenu('end');
    } else {
      display("You've failed to flee.");
      showNextMenu('continue');
    }
  }

  function kill(killer, killee) {
    var cumulExperience = character.experience + monster.experience;
    var levelIncrease = Math.floor(cumulExperience / 100);
    var newExperience = cumulExperience % 100;
    var newLevel = character.level + levelIncrease;
    character.level = newLevel;
    character.experience = newExperience;
    character.physical_attack += levelIncrease;
    character.magic_attack += levelIncrease;
    character.speed += levelIncrease;
    totalEXPGained += monster.experience;
    var cLevel = character.level.toString();
    var cExperience = character.experience.toString();
    $('#allylevel').html("Level: " + newLevel + ", EXP: " + newExperience + " / 100");

    var h = character.current_monster_health;
    var s = h.toString();
    $('#enemyhp').html("HP: " + s.concat("/ <%= monster.health_points %>")); 
    display("You've slain the enemy! You gained " + monster.experience + " experience!");

    showNextMenu('end');
  }

  /* End the battle. */
  function finishBattle() {
    if (character.current_health_points == 0) {
      character.current_health_points = character.health_points;
      character.current_magic_points = character.magic_points;
      character.location = 'forest';
      character.xpos = 2;
      character.ypos = 8;
    }
    save();
    display("The battle has ended! You've earned a total of "
	    + totalEXPGained + " EXP this battle.");
    showEndMenu();
  }

  /* Enter and display the game overworld. */
  function switchToOverworld() {
    window.location.href = '/play';
  }

  /* Display text in the text box. */
  function display(text) {
    $('#textbox').html(text);
  }

  $('#button-next-continue').click(function() {
    nextActor();
    return false;
  });

  $('#button-next-end').click(function() {
    finishBattle();
    return false;
  });

  $('#button-defend').click(function() {
    defend();
    return false;
  });

  $('#button-flee').click(function() {
    flee();
    return false;
  });

  $('#button-overworld').click(function() {
    switchToOverworld();
    return false;
  });
</script>

</body>
</html>

